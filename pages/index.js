import Head from 'next/head'
import Image from 'next/image'
import styles from '../styles/Home.module.css'

import { GraphQLClient } from 'graphql-request'
import ArticleList from '../components/ArtilceList'

export default function Home({ blogPosts }) {

  console.log(blogPosts[0].title)

  return (
    <div className={styles.container}>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className={styles.main}>
        <h1 className={styles.title}>
          Welcome to <a href="/">Let's Blog Now!</a>
        </h1>


        {/* <div className={styles.grid}>
          {blogPosts.map((blogPost) => (
            <div className="card" key={blogPost.id}>
              <h1>{blogPost.title} &rarr;</h1>
              <p>{blogPost.desc.text}</p>
              <p>Written by {blogPost.author} on {blogPost.date}.</p>
            </div>
          ))}
        </div> */}

        <ArticleList articles={blogPosts} />

      </main>

      <footer className={styles.footer}>
        <a
          href="https://vercel.com?utm_source=create-next-app&utm_medium=default-template&utm_campaign=create-next-app"
          target="_blank"
          rel="noopener noreferrer"
        >
          Powered by{' '}
          <span className={styles.logo}>
            <Image src="/vercel.svg" alt="Vercel Logo" width={72} height={16} />
          </span>
        </a>
      </footer>
    </div>
  )
}


export const getStaticProps = async (context) => {
  const graphcms = new GraphQLClient(
    'https://api-us-east-1.graphcms.com/v2/cl2syczv13a4b01yxg6fy8odn/master'
  );

  const { blogPosts } = await graphcms.request(
    `
      { 
        blogPosts {
          id
          author
          title
          date
          desc {
            text
          }
          body {
            text
          }
          slug
        }
      }
    `
  );

  return {
    props: {
      blogPosts,
    },
    revalidate: 10, // revalidate every 10 seconds
  };
}



